(function(){function setIMaskToJQuery(){$.fn.IMask=function(options){let firstInst;return this.each((idx,el)=>{let instance=$(el).data("IMask");instance&&instance.destroy(),instance=IMask(el,options),firstInst||(firstInst=instance),$(el).data("IMask",instance)}),firstInst}}function setPhoneMask(){const selector="data-imask-phone",inputs=$(`[${selector}]`),DEFAULT_MASK="+{7} 000 000-00-00";inputs.each((index,element)=>{let mask=$(element).attr(selector)||DEFAULT_MASK;const isNeedPlaceholder=!$(element).attr("placeholder");let options={mask:mask,commit(){mask=this.mask,isNeedPlaceholder&&$(element).attr("placeholder",mask.replace(/[\{\}\[\]]/g,""))}},instance=$(element).IMask(options);instance.updateMask=value=>{value=value.replace(/\D/g,"")?value:DEFAULT_MASK;const phoneNumber=instance.unmaskedValue,oldCountry小ode=mask.match(/\{(\d+)\}/)[1],newCountry小ode=value.match(/\{(\d+)\}/)[1],actualPhoneNumber=phoneNumber.length?newCountry小ode+phoneNumber.slice(oldCountry小ode.length):"";options.mask=value,instance.masked.updateOptions(options),instance.value=actualPhoneNumber},$(element).attr("inputmode","tel")})}function setNumberMask(){const selector="data-imask-num",inputs=$(`[${selector}]`),PREFIX_ATTR="data-prefix",SUFFIX_ATTR="data-suffix",declOfNum=(value,titles)=>{const cases=[2,0,1,1,1,2];return titles[value%100>4&&value%100<20?2:cases[value%10<5?value%10:5]]};inputs.each((index,element)=>{let separator=$(element).attr(selector)||"",prefixValue=$(element).attr(PREFIX_ATTR)||"",suffixValue=$(element).attr(SUFFIX_ATTR)||"";const isArraySuffix=()=>3===suffixValue.split("|").length,actualSuffixValue=(num=0)=>isArraySuffix()?declOfNum(num,suffixValue.split("|")):suffixValue,options={mask:"prefixnumsuffix",eager:!0,blocks:{prefix:{mask:prefixValue},num:{mask:Number,thousandsSeparator:separator},suffix:{mask:actualSuffixValue()}}},instance=$(element).IMask(options),updateOptions=newOptions=>{instance.masked.updateOptions(newOptions),instance.value=instance.unmaskedValue?instance.unmaskedValue+" ":""};instance.updateSeparator=value=>{options.blocks.num.thousandsSeparator=value,updateOptions(options)},instance.updatePrefixValue=value=>{options.blocks.prefix.mask=value,updateOptions(options)},instance.updateSuffixValue=value=>{suffixValue=value,options.blocks.suffix.mask=actualSuffixValue(instance.unmaskedValue),updateOptions(options)},instance.on("accept",()=>{options.blocks.suffix.mask=actualSuffixValue(instance.unmaskedValue),updateOptions(options)}),$(element).attr("inputmode","decimal")})}function setIrsBindMethods(){const irsTemp=$.fn.ionRangeSlider;$.fn.ionRangeSlider=function(...args){const currentIrs=irsTemp.call(this,...args),instance=currentIrs.data("ionRangeSlider"),bindValue=(prop,elements)=>{(elements=$(elements)).each((idx,el)=>{let $el=$(el),iMaskInstance=$el.data("IMask"),updateValue,getValue;iMaskInstance?(updateValue=value=>iMaskInstance.value=value.toString(),getValue=()=>iMaskInstance.unmaskedValue):(updateValue=value=>$el.val(value),getValue=()=>$el.val()),updateValue(instance.result[prop]),currentIrs.on("change",()=>{instance.is_active&&updateValue(instance.result[prop])}),$el.on("input",()=>{instance.update({[prop]:getValue()}),getValue()>instance.result[prop]&&updateValue(instance.result[prop])}),$el.on("blur",()=>{updateValue(instance.result[prop])})})};return instance.bindValue=bindValue,instance.bindFromValue=element=>bindValue("from",element),instance.bindToValue=element=>bindValue("to",element),currentIrs}}return{init(){if(!("$"in window))return console.warn("jQuery is not defined");"IMask"in window?(setIMaskToJQuery(),setPhoneMask(),setNumberMask()):console.warn("IMask is not defined"),$.fn.ionRangeSlider?setIrsBindMethods():console.warn("ionRangeSlider is not defined")}}})().init();